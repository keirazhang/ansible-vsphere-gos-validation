# Copyright 2025 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
---
# Enable or disable one or all package reposiotories
# Parameter
#   repo_state: The state of repository: enabled or disabled.
#   repo_name(Optional): The repository name to enable or disable.
#     If it is not set, all repositories will be enabled or disabled.
#   repo_state_ignore_errors(Optional): Whether to ignore errors when enabling or disabling repositories.
#     The default value is false.
#
- name: "Check repo_state is set"
  ansible.builtin.assert:
    that:
      - repo_state is defined
      - repo_state in ['enabled', 'disabled']
    fail_msg: "Parameter 'repo_state' must be set as 'enabled' or 'disabled'"

- name: "Set facts of repository operation and enabled value"
  ansible.builtin.set_fact:
    repo_op: "{{ repo_state[0:-1] | capitalize }}"
    repo_enabled: "{{ (repo_state == 'enabled') | ternary(1, 0) }}"

- name: "{{ repo_op }} all repositories"
  when: repo_name is undefined or not repo_name
  block:
    - name: "Set fact of repositories path"
      ansible.builtin.set_fact:
        repos_path: |-
          {%- if guest_os_ansible_pkg_mgr is match('yum|dnf|tdnf') -%}/etc/yum.repos.d/*.repo
          {%- elif guest_os_ansible_pkg_mgr == 'zypper' -%}/etc/zypp/repos.d/*.repo
          {%- endif -%}

    - name: "{{ repo_op }} all repositories for {{ vm_guest_os_distribution }}"
      ansible.builtin.shell: "sed -i 's/enabled *=.*/enabled={{ repo_enabled }}/' {{ repos_path }}"
      delegate_to: "{{ vm_guest_ip }}"
      ignore_errors: "{{ repo_state_ignore_errors | default(omit) }}"
      when: repos_path

- name: "{{ repo_op }} repository '{{ repo_name }}'"
  when: repo_name is defined and repo_name
  block:
    # RHEL-like OS
    - name: "{{ repo_op }} repository '{{ repo_name }}' for {{ vm_guest_os_distribution }}"
      when: guest_os_family == 'RedHat'
      block:
        - name: "{{ repo_op }} yum repository '{{ repo_name }}' for {{ vm_guest_os_distribution }}"
          ansible.builtin.command: "yum-config-manager --{{ repo_state }} {{ repo_name }}"
          delegate_to: "{{ vm_guest_ip }}"
          ignore_errors: "{{ repo_state_ignore_errors | default(omit) }}"
          when: guest_os_ansible_pkg_mgr == "yum"

        - name: "{{ repo_op }} dnf repository {{ repo_name }} for {{ vm_guest_os_distribution }}"
          ansible.builtin.command: "dnf config-manager --set-{{ repo_state }} {{ repo_name }}"
          delegate_to: "{{ vm_guest_ip }}"
          ignore_errors: "{{ repo_state_ignore_errors | default(omit) }}"
          when: guest_os_ansible_pkg_mgr is match('dnf')

    # VMware Photon OS
    - name: "{{ repo_op }} yum repository {{ repo_name }} for {{ vm_guest_os_distribution }}"
      ansible.builtin.shell: "grep -l '\\[{{ repo_name }}\\]' /etc/yum.repos.d/*.repo | xargs sed -i 's/enabled *= *1/enabled={{ repo_enabled }}/'"
      ignore_errors: "{{ repo_state_ignore_errors | default(omit) }}"
      delegate_to: "{{ vm_guest_ip }}"
      when: guest_os_ansible_distribution == 'VMware Photon OS'

    # SUSE
    - name: "{{ repo_op }} zypper repository {{ repo_name }} for {{ vm_guest_os_distribution }}"
      ansible.builtin.command: "zypper modifyrepo --{{ repo_op | lower }} {{ repo_name }}"
      delegate_to: "{{ vm_guest_ip }}"
      ignore_errors: "{{ repo_state_ignore_errors | default(omit) }}"
      when: guest_os_family == "Suse"
